steps:
  # 1. Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/csa-agent-backend:$COMMIT_SHA', '.']
    id: 'Build Docker Image'

  # 2. Push the Docker image to Google Container Registry (GCR)
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/csa-agent-backend:$COMMIT_SHA']
    id: 'Push to GCR'
    waitFor: ['Build Docker Image']

  # 3. Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: [
        'run', 'deploy', 'csa-agent-backend-service',
        '--image', 'gcr.io/$PROJECT_ID/csa-agent-backend:$COMMIT_SHA',
        '--region', 'us-central1',
        '--platform', 'managed',
        '--quiet',
        '--allow-unauthenticated',
        '--port', '8080',
        '--memory', '1Gi',
        '--cpu', '1',
        '--timeout', '300',
        '--max-instances', '10',
        '--set-env-vars', 'NODE_ENV=production',
        # Add other environment variables as needed:
        # '--update-env-vars', 'GOOGLE_CLOUD_PROJECT=$PROJECT_ID',
        # '--update-env-vars', 'LOG_LEVEL=info'
      ]
    id: 'Deploy to Cloud Run'
    waitFor: ['Push to GCR']

# Substitutions (provide these when running the build, or in trigger configuration)
# Example:
# _DB_HOST: 'your-db-host-value'

# Define the image to be built (optional, but good practice)
images:
  - 'gcr.io/$PROJECT_ID/csa-agent-backend:$COMMIT_SHA'

# Optional: Configure timeout for the build
# timeout: '1200s'

# Placeholder for future deployment steps, e.g., to Cloud Run
# images:
#   - 'gcr.io/$PROJECT_ID/csa-agent-backend:$COMMIT_SHA' 